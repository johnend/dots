#  ████████╗███╗   ███╗██╗   ██╗██╗  ██╗
#  ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝
#     ██║   ██╔████╔██║██║   ██║ ╚███╔╝ 
#     ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗ 
#     ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗
#     ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝

###############################################################################
# Options
###############################################################################

set -g  default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
set -g  history-limit 50000
set -g  detach-on-destroy off
set -g  renumber-windows on

set -g  bell-action none

# mouse enbabled
set -g  mouse on

# Vim style keybinds
set -g  mode-keys vi
set -gs escape-time 10

# status
set -g  display-time 3000
set -g  status-interval 5
set -g  status-position top
set -g  base-index 1


# layouts
set -g  main-pane-width 60% 
set -g  main-pane-height 60% 

###############################################################################
# Keybinds
###############################################################################

# unbind all defaults
unbind -a -T prefix
unbind -a -T root
unbind -a -T copy-mode-vi

# leader
set -g prefix C-s


# navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# pane management
bind    v   split-window -h -c '#{pane_current_path}'
bind    s   split-window -v -c '#{pane_current_path}'
bind    C-s select-layout main-horizontal
bind    C-v select-layout main-vertical
bind    C-r rotate-window
bind    C-t select-layout tiled
bind    C-w kill-pane
bind    z   resize-pane -Z
bind -r H   resize-pane -L
bind -r J   resize-pane -D
bind -r K   resize-pane -U
bind -r L   resize-pane -R

# windows
bind    t     new-window      -a -t '{end}'
bind    n     command-prompt  -p    "Session name:" "new-session -s '%1'"
bind    N     command-prompt  -p    "New session name:" "rename-session %1"

bind    Tab   select-window   -t:+
bind    BTab  select-window   -t:-
bind    C-q   kill-window
bind    1     select-window -t 1
bind    2     select-window -t 2
bind    3     select-window -t 3
bind    4     select-window -t 4
bind    5     select-window -t 5
bind    6     select-window -t 6
bind    7     select-window -t 7
bind    8     select-window -t 8
bind    9     select-window -t 9

# meta commands
bind r source-file ~/.config/tmux/tmux.conf; display-message "tmux.conf reloaded"
bind q detach
bind ? list-keys
bind Enter command-prompt
bind Space copy-mode 

# if selection exists, clear selection, otherwise begin selection
bind -T copy-mode-vi Space    if -F "#{selection_present}" {send -X clear-selection} {send -X begin-selection}

bind -T copy-mode-vi Escape   send -X cancel
bind -T copy-mode-vi Up       send -X cursor-up
bind -T copy-mode-vi Down     send -X cursor-down
bind -T copy-mode-vi Left     send -X cursor-left
bind -T copy-mode-vi Right    send -X cursor-right

bind -T copy-mode-vi v        send -X begin-selection
bind -T copy-mode-vi y        send -X copy-selection # same as yank (note adding -no-clear doesn't remove the selection) 
bind -T copy-mode-vi Enter    send -X copy-selection-and-cancel # copies the selection and exits copy mode

# copies the selection to system clipboard on mac or linux
if "uname | grep -q Darwin" { bind -T copy-mode-vi y send -X copy-pipe 'pbcopy' }
if "uname | grep -q Linux" { bind -T copy-mode-vi y send -X copy-pipe 'xclip -i -selection clipboard' }

# Restore unbound mouse commands
bind -T root MouseDown1Pane { select-pane -t =; send -M }
bind -n MouseDown1Status select-window -t =
bind -n MouseDown3Pane   if -F -t= "#{mouse_any_flag}" { select-pane -t=; send -M } { select-pane -mt= }
bind -n MouseDrag1Pane   if -F -t= "#{mouse_any_flag}" { if -Ft= "#{pane_in_mode}" { copy-mode -M } { send -M } } { copy-mode -M }
bind -n MouseDrag1Border resize-pane -M
bind -n WheelUpPane      if -F -t= "#{mouse_any_flag}" { send -M } { if -Ft= "#{pane_in_mode}" { send -M } { copy-mode -et= } }
bind -n WheelUpStatus    previous-window
bind -n WheelDownStatus  next-window

# Restores unbound copy-mode mouse commands
bind -T copy-mode-vi MouseDown1Pane    select-pane
bind -T copy-mode-vi MouseDrag1Pane    { select-pane; send -X begin-selection }
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-no-clear
bind -T copy-mode-vi WheelUpPane       { select-pane; send -X -N 5 scroll-up }
bind -T copy-mode-vi WheelDownPane     { select-pane; send -X -N 5 scroll-down }
bind -T copy-mode-vi DoubleClick1Pane  { select-pane; send -X select-word }
bind -T copy-mode-vi TripleClick1Pane  { select-pane; send -X select-line }

###############################################################################
# Plugins
###############################################################################
set -g @tpm-clean 'U'

set -g @plugin 'catppuccin/tmux#v2.1.0'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'omerxx/tmux-sessionx'

# Catppuccin theme settings
set -g @catppuccin_flavor "mocha"


# Status line
set -g status-right-length 100

set -g status-right "#{E:@catppuccin_status_application}#{E:@catppuccin_status_session}"
set -g status-left ""

# Menu styling options
set -g @catppuccin_menu_selected_style "fg=#{@thm_fg},bold,bg=#{@thm_overlay_0}"

# Pane styling options
set -g @catppuccin_pane_status_enabled "no" # set to "yes" to enable
set -g @catppuccin_pane_border_status "no" # set to "yes" to enable
set -g @catppuccin_pane_border_style "fg=#{@thm_overlay_0}"
set -g @catppuccin_pane_active_border_style "##{?pane_in_mode,fg=#{@thm_mauve},##{?pane_synchronized,fg=#{@thm_lavender},fg=#{@thm_mauve}}}"
set -g @catppuccin_pane_default_text "##{b:pane_current_path}"
set -g @catppuccin_pane_default_fill "number"
set -g @catppuccin_pane_number_position "left" # right, left

set -g @catppuccin_window_status_style "rounded" # basic, rounded, slanted, custom, or none
set -g @catppuccin_window_text_color "#{@thm_bg}" 
set -g @catppuccin_window_number_color "#{@thm_lavender}"
set -g @catppuccin_window_text " #T"
set -g @catppuccin_window_number "#I"
set -g @catppuccin_window_current_text_color "#{@thm_surface_0}"
set -g @catppuccin_window_current_number_color "#{@thm_mauve}"
set -g @catppuccin_window_current_text " #T"
set -g @catppuccin_window_current_number "#I"
set -g @catppuccin_window_number_position "left"
set -g @catppuccin_window_flags "none"
set -g @catppuccin_window_flags_icon_last " 󰖰" # -
set -g @catppuccin_window_flags_icon_current " 󰖯" # *
set -g @catppuccin_window_flags_icon_zoom " 󰁌" # Z
set -g @catppuccin_window_flags_icon_mark " 󰃀" # M
set -g @catppuccin_window_flags_icon_silent " 󰂛" # ~
set -g @catppuccin_window_flags_icon_activity " 󱅫" # #
set -g @catppuccin_window_flags_icon_bell " 󰂞" # !
# Matches icon order when using `#F` (`#!~[*-]MZ`)
set -g @catppuccin_window_flags_icon_format "##{?window_activity_flag,#{E:@catppuccin_window_flags_icon_activity},}##{?window_bell_flag,#{E:@catppuccin_window_flags_icon_bell},}##{?window_silence_flag,#{E:@catppuccin_window_flags_icon_silent},}##{?window_active,#{E:@catppuccin_window_flags_icon_current},}##{?window_last_flag,#{E:@catppuccin_window_flags_icon_last},}##{?window_marked_flag,#{E:@catppuccin_window_flags_icon_mark},}##{?window_zoomed_flag,#{E:@catppuccin_window_flags_icon_zoom},}"

# TODO: set -g @plugin 'christoomey/vim-tmux-navigator' # requires the equivalent plugin in NeoVim

# sessionx
# TODO: install and set up tmuxinator to use with sessionx
set -g @sessionx-bind 'C-o'
set -g @sessionx-custom-paths '$HOME/Developer/fdweb,$HOME/Developer/personal,$HOME/Developer/shell,$HOME/Developer/external'
set -g @sessionx-fzf-builtin-tmux 'on'
set -g @sessionx-layout 'reverse'
set -g @sessionx-preview-location 'bottom'
set -g @sessionx-ls-command 'eza -lTX --level=1 --icons --color=always --sort=name --group-directories-first'
set -g @sessionx-tmuxinator-mode 'on'

set -g pane-border-format ""
set -g pane-border-status top

# run the plugins configs etc.
run '~/.config/tmux/plugins/tpm/tpm'
